// <auto-generated />
using System;
using Message_app_backend.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Message_app_backend.Migrations
{
    [DbContext(typeof(AppDb))]
    [Migration("20221112030720_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Message_app_backend.Entities.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"), 1L, 1);

                    b.Property<string>("ActivityContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupChatId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("ActivityId");

                    b.HasIndex("GroupChatId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Message_app_backend.Entities.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FriendId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("Message_app_backend.Entities.FriendRequest", b =>
                {
                    b.Property<int>("FriendRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FriendRequestId"), 1L, 1);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserReceiveId")
                        .HasColumnType("int");

                    b.Property<int?>("UserSendId")
                        .HasColumnType("int");

                    b.HasKey("FriendRequestId");

                    b.HasIndex("UserSendId");

                    b.ToTable("FriendRequests");
                });

            modelBuilder.Entity("Message_app_backend.Entities.GroupChat", b =>
                {
                    b.Property<int>("GroupChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupChatId"), 1L, 1);

                    b.Property<int?>("MasterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuanityMember")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("GroupChatId");

                    b.HasIndex("MasterId");

                    b.HasIndex("RoomId");

                    b.ToTable("GroupChats");
                });

            modelBuilder.Entity("Message_app_backend.Entities.GroupMember", b =>
                {
                    b.Property<int>("GroupMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupMemberId"), 1L, 1);

                    b.Property<int>("GroupChatId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("GroupMemberId");

                    b.HasIndex("GroupChatId");

                    b.HasIndex("UserId");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("Message_app_backend.Entities.InviteAndRequestJoinGroupChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("GroupChatId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("UserReceiveId")
                        .HasColumnType("int");

                    b.Property<int?>("UserSendId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupChatId");

                    b.HasIndex("UserSendId");

                    b.ToTable("InviteAndRequestJoinGroupChats");
                });

            modelBuilder.Entity("Message_app_backend.Entities.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"), 1L, 1);

                    b.Property<int>("CallDuration")
                        .HasColumnType("int");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Recall")
                        .HasColumnType("bit");

                    b.Property<int?>("RoomId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("SendTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Message_app_backend.Entities.Reaction", b =>
                {
                    b.Property<int>("ReactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReactionId"), 1L, 1);

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("ReactionContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReactionId");

                    b.HasIndex("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("Message_app_backend.Entities.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);

                    b.Property<string>("ActiveStatus")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("RoomId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Message_app_backend.Entities.RoomMember", b =>
                {
                    b.Property<int>("RoomMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomMemberId"), 1L, 1);

                    b.Property<int?>("RoomId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoomMemberId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("RoomMember");
                });

            modelBuilder.Entity("Message_app_backend.Entities.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("ActiveStatus")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateTime>("DisconnectTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FriendRequest")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("InviteJoinGroupChat")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("Message_app_backend.Entities.Activity", b =>
                {
                    b.HasOne("Message_app_backend.Entities.GroupChat", "GroupChat")
                        .WithMany()
                        .HasForeignKey("GroupChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupChat");
                });

            modelBuilder.Entity("Message_app_backend.Entities.Friend", b =>
                {
                    b.HasOne("Message_app_backend.Entities.UserInfo", "UserInfo")
                        .WithMany("Friends")
                        .HasForeignKey("UserId");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Message_app_backend.Entities.FriendRequest", b =>
                {
                    b.HasOne("Message_app_backend.Entities.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserSendId");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Message_app_backend.Entities.GroupChat", b =>
                {
                    b.HasOne("Message_app_backend.Entities.UserInfo", "UserInfo")
                        .WithMany("GroupChats")
                        .HasForeignKey("MasterId");

                    b.HasOne("Message_app_backend.Entities.Room", "Room")
                        .WithMany("GroupChats")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Message_app_backend.Entities.GroupMember", b =>
                {
                    b.HasOne("Message_app_backend.Entities.GroupChat", "Chat")
                        .WithMany()
                        .HasForeignKey("GroupChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Message_app_backend.Entities.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Message_app_backend.Entities.InviteAndRequestJoinGroupChat", b =>
                {
                    b.HasOne("Message_app_backend.Entities.GroupChat", "groupChat")
                        .WithMany()
                        .HasForeignKey("GroupChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Message_app_backend.Entities.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserSendId");

                    b.Navigation("UserInfo");

                    b.Navigation("groupChat");
                });

            modelBuilder.Entity("Message_app_backend.Entities.Message", b =>
                {
                    b.HasOne("Message_app_backend.Entities.Room", "Room")
                        .WithMany("Messages")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Message_app_backend.Entities.UserInfo", "UserInfo")
                        .WithMany("Messages")
                        .HasForeignKey("UserId");

                    b.Navigation("Room");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Message_app_backend.Entities.Reaction", b =>
                {
                    b.HasOne("Message_app_backend.Entities.Message", "Message")
                        .WithMany("Reactions")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Message_app_backend.Entities.UserInfo", "UserInfo")
                        .WithMany("Reactions")
                        .HasForeignKey("UserId");

                    b.Navigation("Message");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Message_app_backend.Entities.RoomMember", b =>
                {
                    b.HasOne("Message_app_backend.Entities.Room", "Room")
                        .WithMany("RoomMembers")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Message_app_backend.Entities.UserInfo", "UserInfo")
                        .WithMany("RoomMembers")
                        .HasForeignKey("UserId");

                    b.Navigation("Room");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("Message_app_backend.Entities.Message", b =>
                {
                    b.Navigation("Reactions");
                });

            modelBuilder.Entity("Message_app_backend.Entities.Room", b =>
                {
                    b.Navigation("GroupChats");

                    b.Navigation("Messages");

                    b.Navigation("RoomMembers");
                });

            modelBuilder.Entity("Message_app_backend.Entities.UserInfo", b =>
                {
                    b.Navigation("Friends");

                    b.Navigation("GroupChats");

                    b.Navigation("Messages");

                    b.Navigation("Reactions");

                    b.Navigation("RoomMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
